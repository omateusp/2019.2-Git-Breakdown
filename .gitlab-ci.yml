# Gitlab-ci.yml file

# This is the major part of the code which explains the stages present in our pipeline.
# In a django application we have various stages which include testing, packing the code,
# performing migrations, collecting static files and running the application.
# The various stages are broadly classified into 3 main categories:

# 1. Test       2. Release      3. Deploy

stages:
- test
- build

# Stage I
# Testing Phase:
# This is where the main code is tested.
# Other options like code coverage, etc are also written in this phase
apis-test:
  stage: test
  image: docker:dind
  before_script:
    # install nodejs and npm
    - curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
    - sudo apt-get install nodejs

    #install docker-compose
    - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    - sudo chmod +x /usr/local/bin/docker-compose

    - sudo docker-compose up -d --build
  
    # install requirement to api_gateway
    - npm --prefix ./APIs/api_gateway install ./APIs/api_gateway
    
    # install requirement to branches_request
    #- npm --prefix ./APIs/branches_request install ./APIs/branches_request
    
    # install requirement to commits_request
    - npm --prefix ./APIs/commits_request install ./APIs/commits_request
    
    # install requirement to issues_request
    - npm --prefix ./APIs/issues_request install ./APIs/issues_request
    
    # install requirement to pullrequests_request
    - npm --prefix ./APIs/pullrequests_request install ./APIs/pullrequests_request
  script:
    # Command to test our application
    - npm test --prefix ./APIs/pullrequests_request
    #- npm test --prefix ./APIs/branches_request
    - npm test --prefix ./APIs/commits_request
    - npm test --prefix ./APIs/issues_request
    - npm test --prefix ./APIs/api_gateway
    - sudo docker-compose down
    
# Stage II
# Build Phase:
# This is where the main code is built.
build:
  image: docker:dind
  stage: build
  script:
      - sudo curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      - sudo chmod +x /usr/local/bin/docker-compose
      - sudo docker-compose build --no-cache
